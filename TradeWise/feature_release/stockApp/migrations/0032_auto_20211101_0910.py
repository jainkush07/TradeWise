# Generated by Django 3.1.7 on 2021-11-01 03:40

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('stockApp', '0031_auto_20211019_1937'),
    ]

    operations = [
        migrations.RenameField(
            model_name='stockownershippattern',
            old_name='otherParties',
            new_name='others',
        ),
        migrations.AddField(
            model_name='stockessentials',
            name='enterpriseValue',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=1000, null=True),
        ),
        migrations.AddField(
            model_name='stockownershippattern',
            name='institutionalHolding',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=1000, null=True),
        ),
        migrations.AddField(
            model_name='stockownershippattern',
            name='privatePublicInvestmenFirmVCs',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=1000, null=True),
        ),
        migrations.CreateModel(
            name='stockProfitAndLossTTM',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TTMDataFor', models.CharField(choices=[('Quarter', 'Quarter'), ('Half Yearly', 'Half Yearly'), ('9 Monthly', '9 Monthly'), ('Annual', 'Annual')], default='quarter', max_length=25)),
                ('revenue', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('otherRevenue', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('totalRevenue', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('costOfGoodsSold', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('grossProfit', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('rawMaterials', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('powerAndFuelCost', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('employeeCost', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('sellingAndAdministrativeExpenses', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('operatingAndOtherExpenses', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('ebidta', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('depreciationAndAmortization', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('pbit', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('interestIncome', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('interestExpense', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('otherItems', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('pbt', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('taxesAndOtherItems', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('netIncome', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('dilutedEPS', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('basicEPS', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('DPS', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('payoutRatio', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('publish', models.DateTimeField(default=django.utils.timezone.now)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published')], default='draft', max_length=10)),
                ('analyst', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='analystSPALTTM', to=settings.AUTH_USER_MODEL)),
                ('stockProfileName', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stockProfileNameSPALTTM', to='stockApp.stockbasicdetail')),
                ('verifiedBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verifiedBySPALTTM', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Stock Financial - Profit And Loss TTM',
            },
        ),
        migrations.CreateModel(
            name='stockCashFlowTTM',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TTMDataFor', models.CharField(choices=[('Quarter', 'Quarter'), ('Half Yearly', 'Half Yearly'), ('9 Monthly', '9 Monthly'), ('Annual', 'Annual')], default='quarter', max_length=25)),
                ('cashFromOperatingActivities', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('cashFromInvestingActivities', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('cashFromFinancingActivities', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('netChangeInCash', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('changesInWorkingCapital', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('capitalExpenditures', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('freeCashFlow', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('publish', models.DateTimeField(default=django.utils.timezone.now)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published')], default='draft', max_length=10)),
                ('analyst', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='analystSCFTTM', to=settings.AUTH_USER_MODEL)),
                ('stockProfileName', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stockProfileNameSCFTTM', to='stockApp.stockbasicdetail')),
                ('verifiedBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verifiedBySCFTTM', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Stock Financial - Cashflow TTM',
            },
        ),
        migrations.CreateModel(
            name='stockBalanceSheetTTM',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TTMDataFor', models.CharField(choices=[('Quarter', 'Quarter'), ('Half Yearly', 'Half Yearly'), ('9 Monthly', '9 Monthly'), ('Annual', 'Annual')], default='quarter', max_length=25)),
                ('cashAndCashEquivalents', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('marketableSecurities', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('bankBalanceOtherThanCashEquivalents', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('cashAndShortTermInvestments', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('totalReceivables', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('totalInventory', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('prepaidExpenses', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('currentInvestments', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('otherCurrentFinancialAssets', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('loanAndAdvances', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('deferredTaxAssest', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('currentAssets', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('netPropertyORPlantOREquipment', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('goodWill', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('otherIntangibleAssests', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('intangibleAssestsUnderDevelopment', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('longTermInvestments', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('deferredTaxAssetsNet', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('otherNonCurrentAssets', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('nonCurrentAssets', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('totalAssets', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('accountPayable', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('totalDeposits', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('currentPortionOfLongTermDebt', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('unearnedRevenue', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('currentPortionOfLeases', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('otherCurrentLiabilities', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('currentLiabilities', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('totalLongTermDebt', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('longTermPortionOfLeases', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('deferredTaxLiabilities', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('otherNonCurrentLiabilities', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('nonCurrentLiabilities', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('totalLiabilities', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('commonStock', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('otherEquity', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('reservesAndSurplus', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('additionalPaidInCapital', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('retainedEarnings', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('minorityInterest', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('treasureStock', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('comprehensiveIncAndOther', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('totalEquity', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('totalCommonSharesOutstanding', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('totalLiabilitiesShareHolderHistory', models.DecimalField(blank=True, decimal_places=20, max_digits=1000, null=True)),
                ('publish', models.DateTimeField(default=django.utils.timezone.now)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published')], default='draft', max_length=10)),
                ('analyst', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='analystSBSTTM', to=settings.AUTH_USER_MODEL)),
                ('stockProfileName', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='stockProfileNameSBSTTM', to='stockApp.stockbasicdetail')),
                ('verifiedBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verifiedBySBSTTM', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Stock Financial - Balance Sheet TTM',
            },
        ),
    ]
